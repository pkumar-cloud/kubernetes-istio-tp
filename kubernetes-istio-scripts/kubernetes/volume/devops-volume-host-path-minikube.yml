# Demo purpose only
# Minikube support hostPath volume out-ot-the box
# See https://minikube.sigs.k8s.io/docs/handbook/persistent_volumes/

apiVersion: v1
kind: Namespace
metadata:
  name:  devops

---

apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: devops
  name: upload-minikube-persistent-volume
spec:
  capacity:
    storage: 100M
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: default-storageclass  # A
  hostPath:                               # testing only, supported byminikube out-of-the-box
    path: /data/upload/minikube           # https://minikube.sigs.k8s.io/docs/handbook/persistent_volumes/

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: devops
  name: upload-minikube-pv-claim-name     # B
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default-storageclass  # A
  resources:
    requests:
      storage: 100M

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: devops
  name: devops-volume-deployment-local
  labels:
    app.kubernetes.io/name: devops-volume
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: devops-volume-pod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devops-volume-pod
        app.kubernetes.io/version: 1.0.0
    spec:
      volumes:
        - name: pod-minikube-storage   # C
          persistentVolumeClaim:
            claimName: upload-minikube-pv-claim-name   # B
      containers:
      - name: devops-blue
        image: timpamungkas/devops-blue:1.0.0
        resources:
          limits:
            cpu: "0.5"
            memory: 500M
        ports:
        - name:  http
          containerPort: 8111
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /devops/blue/actuator/health/readiness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: /devops/blue/actuator/health/liveness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        volumeMounts:
          - name: pod-minikube-storage   # C
            mountPath: /upload/image
          - name: pod-minikube-storage     # C
            mountPath: /upload/doc
      - name: alpine-linux
        image: alpine
        command: ['sh', '-c', 'echo alpine-linux-container is running ; sleep 3600 ']
        resources:
          limits:
            cpu: "0.5"
            memory: 200M
        volumeMounts:
          - name: pod-minikube-storage   # C
            mountPath: /upload-on-alpine/image
          - name: pod-minikube-storage     # C
            mountPath: /upload-on-alpine/doc
  replicas: 2

---

apiVersion: v1
kind: Service
metadata:
  namespace: devops
  name: devops-volume-service
  labels:
    app.kubernetes.io/name: devops-volume
spec:
  selector:
    app.kubernetes.io/name: devops-volume-pod
  type:  LoadBalancer
  ports:
  - port: 9011         # port number to be available at host
    targetPort: 8111   # port on pod