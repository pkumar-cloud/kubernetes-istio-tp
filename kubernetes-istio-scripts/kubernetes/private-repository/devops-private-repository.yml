apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: devops
  name: devops-red-deployment
  labels:
    app.kubernetes.io/name: devops-red
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: devops-red
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devops-red
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - name: devops-red
        image: timpamungkas/devops-red:1.0.0
        resources:
          requests:
            cpu : "0.5"
            memory: 500Mi
          limits:
            cpu : "0.5"
            memory: 1Gi
        ports:
        - name:  http
          containerPort: 8114
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /devops/red/actuator/health/readiness
            port: 8114
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: /devops/red/actuator/health/liveness
            port: 8114
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
      imagePullSecrets:
        - name: dockerhub-secret
  replicas: 1

---

apiVersion: v1
kind: Service
metadata:
  namespace: devops
  name: devops-red-clusterip
  labels:
    app.kubernetes.io/name: devops-red
spec:
  selector:
    app.kubernetes.io/name: devops-red
  ports:
  - port: 8114
    name: http

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: devops
  name: ingress-devops-red
  labels:
    app.kubernetes.io/name: devops-red
spec:
  ingressClassName: nginx
  rules:
  - host: api.devops.local
    http:
      paths:
      - path: /devops/red
        pathType: Prefix
        backend:
          service:
            name: devops-red-clusterip
            port:
              number: 8114