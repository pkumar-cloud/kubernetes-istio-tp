apiVersion: v1
kind: Namespace
metadata:
  name:  devops

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  namespace: devops
  name: devops-blue-storage-class-name    # A1
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: devops
  name: devops-blue-persistent-volume     # B1
spec:
  capacity:
    storage: 100M   # E1
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: devops-blue-storage-class-name    # A1
  local:
    # path: /usr/share/k8s-local-storage/image              # Linux / Mac, use linux-style path
    path: /run/desktop/mnt/host/d/k8s-local-storage/image   # Windows, use this syntax to mount at folder d:/k8s-local-storage/image
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube    # selector need to be changed based on `kubectl describe node`, and value on matching label 

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: devops
  name: devops-blue-pv-claim-name    # C1
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: devops-blue-storage-class-name  # A1
  resources:
    requests:
      storage: 105M   # Invalid, persistent volume only allow 100M (# E1) but requesting more

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: devops
  name: devops-blue-deployment
  labels:
    app.kubernetes.io/name: devops-blue
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: devops-blue
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devops-blue
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - name: devops-blue
        image: timpamungkas/devops-blue:1.0.0
        resources:
          limits:
            cpu : "1"
            memory: 1Gi   
          requests:
            cpu : "0.5"
            memory: 500Mi
        ports:
        - name:  http
          containerPort: 8111
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /devops/blue/actuator/health/readiness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: /devops/blue/actuator/health/liveness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        volumeMounts:
          - name: pod-image-storage   # D1
            mountPath: /upload/image
      volumes:
        - name: pod-image-storage   # D1
          persistentVolumeClaim:
            claimName: devops-blue-pv-claim-name   # C1
  replicas: 1
