apiVersion: v1
kind: Namespace
metadata:
  name:  devops

---

apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: devops
  name: pv-a
spec:
  capacity:
    storage: 100M
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /data/statefulset/pv-a
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube

---

apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: devops
  name: pv-b
spec:
  capacity:
    storage: 100M
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard ##is dynamic provisioning storage, i.e. a volume will be created when needed, without we explicitly define it.
  hostPath:
    path: /data/statefulset/pv-b
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube

---

apiVersion: v1
kind: Service
metadata:
  namespace: devops
  name: devops-stateful-set-headless-service
  labels:
    app.kubernetes.io/name: devops-stateful-set
spec:
  clusterIP: None      # Create headless service. # Create headless service. will be used to provide the network identity for stateful pods.
  selector:
    app.kubernetes.io/name: devops-stateful-set-pod
  ports:
  - port: 8111

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: devops
  name: devops-stateful-set-main
  labels:
    app.kubernetes.io/name: devops-stateful-set
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: devops-stateful-set-pod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devops-stateful-set-pod
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - name: devops-blue
        image: timpamungkas/devops-blue:1.0.0
        resources:
          limits:
            cpu: "0.5"
            memory: 500M
        ports:
        - name:  http
          containerPort: 8111
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /devops/blue/actuator/health/readiness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: /devops/blue/actuator/health/liveness
            port: 8111
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 4
        volumeMounts:
          - name: pod-storage
            mountPath: /upload/image
          - name: pod-storage
            mountPath: /upload/doc
  serviceName: devops-stateful-set-headless-service    # required
  volumeClaimTemplates:
    - metadata:
        name: pod-storage
      spec:
        storageClassName: standard
        resources:
          requests:
            storage: 20Mi
        accessModes:
        - ReadWriteOnce
  replicas: 3